import 'dart:async';
import 'dart:math';

import 'package:flutter/material.dart';

/// Creates a new instance of the [HomePage] widget.

class HomePage extends StatefulWidget {
  /// Creates a new instance of the [HomePage] widget.
  const HomePage({Key? key}) : super(key: key);

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  // Define and initialise variable to store the background color
  Color _backgroundColor = Colors.white;

  // Define and initialise variable to store the text color
  Color _textColor = Colors.black;

  // Define a named constant for the text size
  static const double _textSize = 24;

  // Define a named constant for the interval duration
  static const int _intervalDuration = 2;
  // Define a named constant for the opacity
  static const double _opacity = 0.5;

  // Define a named constant for the maximum value of color
  static const int _maxColorValue = 256;

  // Define a named constant for the maximum value of color
  static const int _maxAlphaValue = 255;

  /// Creates a new random [Color].
  /// The color is generated by randomly selecting values for the red, green,
  /// and blue channels,
  /// and using a fixed value for the alpha channel.
  Color createRandomColor() {
    // Create a random color
    return Color.fromARGB(
      _maxAlphaValue,
      Random().nextInt(_maxColorValue),
      Random().nextInt(_maxColorValue),
      Random().nextInt(_maxColorValue),
    );
  }

  @override
  void initState() {
    Timer.periodic(const Duration(seconds: _intervalDuration), (timer) {
      setState(() {
        _backgroundColor = createRandomColor();
        _textColor =
        // _getInverseColor(_backgroundColor);
        _backgroundColor.computeLuminance() > _opacity
            ? Colors.black
            : Colors.white;
      });
    });
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: _backgroundColor,
      body: Center(
        child: AnimatedDefaultTextStyle(
          duration: const Duration(seconds: _intervalDuration),
          style: TextStyle(color: _textColor, fontSize: _textSize),
          child: const Text("Hey there"),
        ),
      ),
    );
  }

  @override
  void dispose() {
    super.dispose();
  }
}
